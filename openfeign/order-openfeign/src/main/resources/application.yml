server:
  port: 8022
# 应用名称 （nacos会将该名称当做服务名称）
spring:
  application:
    name: order-service
  cloud:
    nacos:
      server-addr: 127.0.0.1:8851
      discovery:
        username: nacos
        password: nacos
        # namespace: public  # 相同特征的服务进行归类分组管理
        # ephemeral: false  # 默认=true（临时实例）  当服务宕机 超过心跳 就会将实例剔除掉
        #永久实例   哪怕宕机了也不会删除实例  当服务宕机 永远不会剔除掉
        #group的相同特征的服务进行归类分组管理
        #weight:  通常要结合 安装 权重的负载均衡策略， 权重越高分配的流量就越大
        #metadata: version=1  可以结合元数据做扩展
        #cluster-name: XUSHU

# feign日志局部配置
feign:
  client:
    config:
      product-service:
        loggerLevel: BASIC
        contract: feign.Contract.Default #设置为默认的契约  （还原成原生注解）
        # 连接超时时间，默认2s
        connectTimeout: 5000
        # 请求处理超时时间，默认5s
        readTimeout: 10000

stock-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

#    主要有7种负载均衡策略：
#
#    RoundRobinRule： 默认轮询的方式。
#
#    RandomRule： 随机方式。
#
#    WeightedResponseTimeRule： 根据响应时间来分配权重的方式，响应的越快，分配的值越大。
#
#    BestAvailableRule： 选择并发量最小的方式。
#
#    RetryRule： 在一个配置时间段内当选择server不成功，则一直尝试使用subRule的方式选择一个可用的server。
#
#    ZoneAvoidanceRule： 根据性能和可用性来选择。
#
#    AvailabilityFilteringRule： 过滤掉那些因为一直连接失败的被标记为circuit tripped的后端server，并过滤掉那些高并发的的后端server（active connections 超过配置的阈值）。
#